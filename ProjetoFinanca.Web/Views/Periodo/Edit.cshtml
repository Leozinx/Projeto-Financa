@model ProjetoFinanca.Modelo.Periodo

@{
    ViewBag.Title = Model.Nome;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="formulario">
        <h2 class="titulo">Período atual</h2>
        <div class="data">
            <div class="form-group">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder="Mês de referência" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="valor">
            <div class="form-group">
                @Html.EditorFor(x => x.DataInicio, new { htmlAttributes = new { @class = "form-control"} })
            </div>
        </div>
        <div class="descricao">
            <div class="form-group">
                @Html.EditorFor(model => model.DataFim, new { htmlAttributes = new { @class = "form-control", @placeholder = "Descrição"} })
                @Html.ValidationMessageFor(model => model.DataFim, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="valor">
            <div class="form-group">
                @Html.EditorFor(x => x.Valor, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="categoria">
            <div class="form-group">
                <label>Confirmar Encerramento do período???</label>
                @Html.EditorFor(model => model.Situacao)
                <button id="calcularPeriodo" disabled="disabled" class="btn-success" type="button">Calcular Período</button>
            </div>
        </div>
        <div class="groupBotoes">
            <div class="form-group">
                <input type="submit" value="Enviar" class="btn enviar" />
                @*<button class="btn enviar">Enviar</button>*@
            </div>
            <div class="form-group">
                <input type="reset" class="btn cancelar" value="Cancelar" />
            </div>
        </div>
    </div>

    @*<div class="form-horizontal">
        <h4>Periodo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataInicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataFim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataFim, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataFim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Situacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Situacao)
                    @Html.ValidationMessageFor(model => model.Situacao, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}

@section scripts{

    <script>
        $(document).ready(function() {
            $("#Valor").maskMoney({
                prefix: 'R$ ',
                allowNegative: true,
                thousands: '.',
                decimal: ',',
                affixesStay: false
            });
            $('[type=Date]').datetimepicker({
                autoclose: true,
                todayBtn: true,
                language: 'pt-BR'
            });
            //Enviando as datas como parametro para retornar o valor entre as datas
            $("#calcularPeriodo").click(function() {
                var inicio = $("#DataInicio").val();
                var fim = $("#DataFim").val();

                $.post('/Periodo/Calcular', { inicio: inicio, final: fim },
                    function (returnedData) {
                        $("#Valor").val(returnedData.replace('.',','));
                    });
                //alert(inicio + " - " + fim);
            });

            $('#Situacao').change(function () {
                if (this.checked) {
                    $("#calcularPeriodo").removeAttr('disabled');
                } else {
                    $("#calcularPeriodo").attr('disabled', 'disabled');
                }
            });
        });


    </script>
}